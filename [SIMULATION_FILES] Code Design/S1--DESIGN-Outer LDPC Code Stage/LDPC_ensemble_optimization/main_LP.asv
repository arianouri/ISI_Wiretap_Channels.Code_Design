clc;
clear all;
load('42minerr.mat')
save('SUPERCHANNEL.mat','kINP','nOUT','MAIN','WRTP','SupCha_CODEBOOK')
% clear; load('0044962_itr100.mat')
save('RateLimits.mat','C_acc','C_B','C_E')
clear
load('SUPERCHANNEL.mat');
load('RateLimits.mat');
TC_inp_length=2.5e4;

Window_size=32;


%% DE parameters

% maximal log likelihood ratio (LLR)
maxLLR=30;
% number of bits for quantizing the interval [-maxLLR:maxLLR]
number_of_bits=13;
% name of the file in which tanh table 'teybel' is saved
file_name='lookup_table';
% tanh table 'teybel' is generated
table_gen(maxLLR,number_of_bits,file_name);
% tanh table 'teybel' is loaded into memory
load('lookup_table');

% error floor
stop_pe=10^-5 ;
% maximal number of iterations
iter=100;

%% tolerance in the error of the optimization function
tol = 5e-3;  
tol_feas = 5e-3;

%% Rates

% C_s               =mean(C_acc);




% p                 =
% R_s               =R_in*p/(1-p);

R_SC_s            =0.08;
R_in              =kINP/nOUT;

R_s               =0.04; %=R_SC_s;
p                 =R_SC_s/(R_in+R_SC_s);

R_SC_BOB          =mean(C_B);
% R_SC_BOB           =0.101;
% R_SC_EVE           =R_SC_BOB-R_SC_s;

R_out_target      =R_SC_BOB/R_in;



% R                 =R_s+mean(C_E);
% R_out             =R/R_in;

%% Degree Distributions

% 1 by D_c check-nodes' distribution matrix: D_c is the maximal check degree

% D_c=33;
% Rho=zeros(1,D_c);
% Rho(3)  =.266;
% Rho(11) =.166;
% Rho(13) =.102;
% Rho(20) =.100;
% Rho(D_c) =.366;

% Rho=[0	0	0.406000000000000	0	0.0700000000000000	0	0.0330000000000000	0	0	0	0.122000000000000	0	0.103000000000000	0	0	0	0	0	0	0.133000000000000	0	0	0	0	0	0	0	0	0	0	0	0	0.133000000000000];
Rho=[0	0	0.406000000000000	0	0.0700000000000000	0	0.0330000000000000	0	0	0	0.122000000000000	0	0.100000000000000	0	0	0	0.103000000000000	0	0.0330000000000000	0.133000000000000];
D_c = length(Rho);

Rho_prm_1 = sum([0:D_c-1].*Rho)

% algorithms are identified
AR=['SP'];   % or 'BP' for sum-product or belief propagation algorithms];     

%% PHASE-I
% 1 by D_v variable-nodes' distribution, D_v is the maximal variabe degree
% RR=R_out;
% sumRho=sum(Rho./(1:length(Rho)));
% D_v=40; %maximum degree of variable node
% Lrow=1./(1:D_v);
% cvx_begin
%     cvx_quiet true 
% %     cvx_solver sdpt3 
% %     cvx_solver SeDuMi
%     cvx_solver Mosek
%     variable Lambda0(D_v)
%     minimize (norm((1-RR)*Lrow*Lambda0-sumRho))
%     subject to
%         Lambda0 >= 0
%         sum(Lambda0) == 1
%         Lambda0(1) == 0
% %         Lambda0(D_v) == 0.2
% cvx_end
% Lambda0=Lambda0';
% if rate_calculation(Lambda0,Rho)-RR>1e-6 
%     error('PHASE-I error'); end

% D_v=60;
% Lambda0=zeros(1,D_v);
% Lambda0(2)=0.225;
% Lambda0(3)=0.235;
% Lambda0(4)=0.0025;
% Lambda0(D_v-2)=0.0025;
% Lambda0(D_v-1)=0.005;
% Lambda0(D_v)=0.53;

% Lambda0=[0,0.241219049438301,0.266236898807741,0.00281977019561323,0.000684061286719462,0.000681357676487795,0.000679494709652296,0.000678160416196684,0.000677190457223510,0.000676487768520488,0.000675989356563064,0.000675651229940909,0.000675440979543702,0.000675333828746878,0.000675310361378096,0.000675355112302621,0.000675455630584979,0.000675601819412874,0.000675785449460869,0.000675999788119903,0.000676239310529277,0.000676499470947773,0.000676776520087767,0.000677067358249218,0.000677369416750272,0.000677680561934025,0.000677999017292476,0.000678323300181154,0.000678652170310259,0.000678984587754597,0.000679319678665525,0.000679656707220734,0.000679995052630815,0.000680334190249603,0.000680673676019091,0.000681013133627810,0.000681352243880943,0.000681690735876660,0.000682028379660545,0.000682364980092390,0.000682700371709820,0.000683034414413668,0.000683366989832628,0.000683697998251017,0.000684027356004655,0.000684354993267120,0.000684680852162486,0.000685004885151943,0.000685327053650863,0.000685647326840373,0.000685965680643539,0.000686282096841314,0.000686596562307457,0.000686909068345033,0.000687219610109843,0.000687528186108477,0.000687834797760564,0.00305148315221290,0.00541800479275609,0.445187919007160];

% Lambda0=[0,0.251219049438301,0.256236898807741,0.00281977019561323,0.000684061286719462,0.000681357676487795,0.000679494709652296,0.000678160416196684,0.000677190457223510,0.000676487768520488,0.000675989356563064,0.000675651229940909,0.000675440979543702,0.000675333828746878,0.000675310361378096,0.000675355112302621,0.000675455630584979,0.000675601819412874,0.000675785449460869,0.000675999788119903,0.000676239310529277,0.000676499470947773,0.000676776520087767,0.000677067358249218,0.000677369416750272,0.000677680561934025,0.000677999017292476,0.000678323300181154,0.000678652170310259,0.000678984587754597,0.000679319678665525,0.000679656707220734,0.000679995052630815,0.000680334190249603,0.000680673676019091,0.000681013133627810,0.000681352243880943,0.000681690735876660,0.000682028379660545,0.000682364980092390,0.000682700371709820,0.000683034414413668,0.000683366989832628,0.000683697998251017,0.000684027356004655,0.000684354993267120,0.000684680852162486,0.000685004885151943,0.000685327053650863,0.000685647326840373,0.000685965680643539,0.000686282096841314,0.000686596562307457,0.000686909068345033,0.000687219610109843,0.000687528186108477,0.000687834797760564,0.00305148315221290,0.00541800479275609,0.445187919007160];
% Lambda0=[0,0.253466572223710,0.246879121973301,0.00458061269090091,0.00101787979370332,0.00101277579877087,0.00100932175277211,0.00100692335131614,0.00100525169970662,0.00100410582042887,0.00100335345960600,0.00100290263851512,0.00100268671542471,0.00100265592871864,0.00100277228648310,0.00100300629943150,0.00100333479027089,0.00100373936585043,0.00100420531719128,0.00100472080742151,0.00100527626036617,0.00100586389311436,0.00100647735435864,0.00100711144191335,0.00100776188039135,0.00100842514512662,0.00100909832198014,0.00100977899519754,0.00101046515733138,0.00101115513660836,0.00101184753815025,0.00101254119624065,0.00101323513543004,0.00101392853873722,0.00101462072156683,0.00101531111024550,0.00101599922430173,0.00101668466178949,0.00101736708709420,0.00101804622076932,0.00101872183103935,0.00101939372667435,0.00102006175099696,0.00102072577682741,0.00102138570220763,0.00102204144677461,0.00102269294867646,0.00102334016194329,0.00102398305424051,0.00102462160494452,0.00102525580349095,0.00102588564795396,0.00102651114382196,0.00102713230294063,0.00102774914259892,0.00102836168473743,0.00102896995526184,0.00332105115419596,0.00561802039208080,0.432407157034357];

% Lambda0=[0,0.203466572223710,0.296879121973301,0.00458061269090091,0.00101787979370332,0.00101277579877087,0.00100932175277211,0.00100692335131614,0.00100525169970662,0.00100410582042887,0.00100335345960600,0.00100290263851512,0.00100268671542471,0.00100265592871864,0.00100277228648310,0.00100300629943150,0.00100333479027089,0.00100373936585043,0.00100420531719128,0.00100472080742151,0.00100527626036617,0.00100586389311436,0.00100647735435864,0.00100711144191335,0.00100776188039135,0.00100842514512662,0.00100909832198014,0.00100977899519754,0.00101046515733138,0.00101115513660836,0.00101184753815025,0.00101254119624065,0.00101323513543004,0.00101392853873722,0.00101462072156683,0.00101531111024550,0.00101599922430173,0.00101668466178949,0.00101736708709420,0.00101804622076932,0.00101872183103935,0.00101939372667435,0.00102006175099696,0.00102072577682741,0.00102138570220763,0.00102204144677461,0.00102269294867646,0.00102334016194329,0.00102398305424051,0.00102462160494452,0.00102525580349095,0.00102588564795396,0.00102651114382196,0.00102713230294063,0.00102774914259892,0.00102836168473743,0.00102896995526184,0.00332105115419596,0.00561802039208080,0.432407157034357];
% Lambda0=[0,0.235757247726153,0.222191219601245,0.00497588528586933,0.00165477938483579,0.00163886032840017,0.00162818018433790,0.00162091700471467,0.00161601889311234,0.00161282418515724,0.00161089113742874,0.00160991184845729,0.00160966470596851,0.00160998624103990,0.00161075353251606,0.00161187271361651,0.00161327119336556,0.00161489223794720,0.00161669110563070,0.00161863223542597,0.00162068716858773,0.00162283299067681,0.00162505115004279,0.00162732655266446,0.00162964686253818,0.00163200195667272,0.00163438349751713,0.00163678459535835,0.00163919954017883,0.00164162358751235,0.00164405278654252,0.00164648384144050,0.00164891399899811,0.00165134095716884,0.00165376279031248,0.00165617788784517,0.00165858490369504,0.00166098271450397,0.00166337038493735,0.00166574713879285,0.00166811233485834,0.00167046544667330,0.00167280604551007,0.00167513378602045,0.00167744839409549,0.00167974965656967,0.00168203741246643,0.00168431154553616,0.00168657197788080,0.00168881866449488,0.00169105158858144,0.00169327075752500,0.00169547619942310,0.00169766796009369,0.00169984610048927,0.00170201069445885,0.00170416182680880,0.00386874849775885,0.00604295894129635,0.439737897318252];

% D_v = 40;
% Lambda0 = zeros(1,D_v);
% Lambda0(2) = .2033;
% Lambda0(3) = .6467;
% Lambda0(6) = .0500;
% Lambda0(14) = .0500;
% Lambda0(D_v) = .0500;

% Lambda0 = [0	0.149774511861521	0.0564616061455439	0.406317955972743	0.341123504917670	0.0123840769542575	0.00464815550232297	0.00264560929675799	0.00182165621731172	0.00139691358477897	0.00114629673037377	0.000984470012711985	0.000873014166490991	0.000792437034593242	0.000731938049053818	0.000685113376054958	0.000647956871095332	0.000617850842025492	0.000603601392029643	0.000572586603602647	0.000570453312435650	0.000539778622935732	0.000526643929736429	0.000515155240414415	0.000505025935408663	0.000496031368813564	0.000487993194802640	0.000480768167823237	0.000487067040694261	0.000468313402452053	0.000462909528597082	0.000457962661037349	0.000453417580204265	0.000449227566676510	0.000445352835206964	0.000441759300555952	0.000438417596448760	0.000435302289453928	0.000432391244290001	0.000429665107751402	0.000427106886280791	0.000424701598019148	0.000422435984502112	0.000420298270439986	0.000418277962502549	0.000416365679931415	0.000414553011269255	0.000412832392634153	0.000411197003857685	0.000409640679505747	0.000408157832355505	0.000406743387343029	0.000405392724349348	0.000404101628476776	0.000445303501854336];

% Lambda0=[0	0.337981784468960	0.339971296334352	0.0586087736705976	0.0222387784911093	0.0106976071674152	0.00759616287478014	0.00630702058525197	0.00562365607076376	0.00520520614351560	0.00492395399753138	0.00472236629522689	0.00457098136720444	0.00445322750107812	0.00435909221951402	0.00428217639488764	0.00421820100448374	0.00416419648014057	0.00725389797188838	0.00418411378888493	0.00881883181693434	0.00411056903304197	0.00408059303300037	0.00405405370163878	0.00403038819549647	0.00400915723341568	0.00399000994085961	0.00397266124129445	0.00795384711648270	0.00394246007601025	0.00392924809586713	0.00391710147490030	0.00390590166762196	0.00389554692609800	0.00388594941434568	0.00387703290462184	0.00386873092064897	0.00386098522836151	0.00385374459976570	0.00384696379346655	0.00384060270853404	0.00383462567810642	0.00382900087642919	0.00382369981857198	0.00381869693631618	0.00381396921699547	0.00380949589463601	0.00380525818476105	0.00380123905581836	0.00379742303145961	0.00379379601891957	0.00379034515956114	0.00378705869831745	0.00378392586930138	0.0175045936108136];

% algorithms are identified
AL=['SP']; % or 'BP' or 'MS' for sum-product or belief propagation or min-sum algorithms


%% Monte-Carlo
%% Trellis Encoding
% Trellis input / LDPC output
TC_inp_msg=(rand(1,TC_inp_length) < 0.5);
% Puncturing
% TC_inp_msg_PUNCTURED=[(rand(1,k_s) < 0.5), TC_inp_msg(k_s+1:end)];
% encoder
[~, ~,MAIN.emsSupCha_out]...
    =SupCha_ENCODER(TC_inp_msg,MAIN.SupCha_Trans_EX,SupCha_CODEBOOK,kINP,nOUT);
[~, ~,WRTP.emsSupCha_out]...
    =SupCha_ENCODER(TC_inp_msg,WRTP.SupCha_Trans_EX,SupCha_CODEBOOK,kINP,nOUT);

%% Channel Simulation

MAIN.ChannelOutVec=MAIN.emsSupCha_out...
    +   normrnd(0,MAIN.sigma,1,length(MAIN.emsSupCha_out))...
    +1i*normrnd(0,MAIN.sigma,1,length(MAIN.emsSupCha_out));

WRTP.ChannelOutVec=WRTP.emsSupCha_out...
    +   normrnd(0,WRTP.sigma,1,length(WRTP.emsSupCha_out))...
    +1i*normrnd(0,WRTP.sigma,1,length(WRTP.emsSupCha_out));

%%
%     Rho = LDPC_opt_RHO('rho_objective',                                 ...
%                    'rho_inequality_constraint',                         ...
%                    'rho_equality_constraint',                           ...
%                     Rho,Lambda0,100);
                                  
R_out = rate_calculation(Lambda0,Rho);
R_out = R_out/(1-p);

disp(['Design Rate: ',num2str(  (R_out * R_in)  ) ]);
disp(['Equivocation Rate: ',num2str(  ((R_out * R_in)-mean(C_E))/R_s  )]);

% Density Evolution %% % % % % % % % % % % % % % % % % % % % % % % % % % % 

[MAIN.p_e_in,~,~]         =DE_SUBCODE(Rho,AR,Lambda0,AL,                                ...
                                      MAIN.sigma,                                       ...
                                      MAIN.SupCha_Trans_EX,SupCha_CODEBOOK,             ...                                 ...
                                      maxLLR,number_of_bits,stop_pe,iter,teybel,        ...
                                      TC_inp_length,TC_inp_msg,p,                       ...
                                      MAIN.ChannelOutVec,Window_size)

% % % % % % % % % % % % % % % % % % % % % % % % % % % % % % % % % % % %  

% [WRTP.p_e_in,~,~]         =DE_SUBCODE(Rho,AR,Lambda0,AL,                                 ...
%                                       WRTP.sigma,                                       ...
%                                       WRTP.SupCha_Trans_EX,SupCha_CODEBOOK,             ...
%                                       WRTP.rx_noisless,                                 ...
%                                       maxLLR,number_of_bits,stop_pe,iter,teybel,        ...
%                                       TC_inp_length,TC_inp_msg,p,                       ...
%                                       WRTP.ChannelOutVec,Window_size);

% % % % % % % % % % % % % % % % % % % % % % % % % % % % % % % % % % % %        

[FICT.p_e_in,~,~]    =DE_SUBCODE_FICT(Rho,AR,Lambda0,AL,                                ...
                                      WRTP.sigma,                                       ...
                                      WRTP.SupCha_Trans_EX,SupCha_CODEBOOK,             ...
                                      maxLLR,number_of_bits,stop_pe,iter,teybel,        ...
                                      TC_inp_length,TC_inp_msg,p,                       ...
                                      WRTP.ChannelOutVec,Window_size)

% % % % % % % % % % % % % % % % % % % % % % % % % % % % % % % % % % % %




%     [Objective_val,~,~] = feval('rate_objective', Lambda0);
%     cm=-Objective_val/(1-R_out);
%     aCoef=ceil(cm)-cm;
%     bCoef=cm-floor(cm);
%     Rho=zeros(size(Rho));
%     Rho(floor(cm))=aCoef;
%     Rho(ceil(cm))=bCoef;


Lambda_star = LDPC_opt('rate_objective','rate_inequality_constraint','rate_equality_constraint',...
                       tol,tol_feas,...
                       Rho,AR,Lambda0,AL,maxLLR,number_of_bits,stop_pe,iter,teybel,...
                       MAIN,WRTP,SupCha_CODEBOOK,R_s,R_in,mean(C_E),TC_inp_length,TC_inp_msg,Window_size,...
                       R_out_target,p);